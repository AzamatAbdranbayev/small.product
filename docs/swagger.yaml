definitions:
  models.Product:
    properties:
      name:
        type: string
      price:
        type: integer
    type: object
  models.SubScription:
    properties:
      product_id:
        type: string
      user_id:
        type: string
    type: object
  models.User:
    properties:
      email:
        type: string
      phone_number:
        type: string
    type: object
info:
  contact: {}
paths:
  /product/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: ID it's product
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Product'
      summary: Получить новый продукт по айди
      tags:
      - Product
    patch:
      consumes:
      - application/json
      parameters:
      - description: ID it's product
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Изменить цену продукта
      tags:
      - Product
  /product/new:
    post:
      consumes:
      - application/json
      parameters:
      - description: Тело
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/models.Product'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Product'
      summary: Создать новый продукт
      tags:
      - Product
  /subscription/new:
    post:
      consumes:
      - application/json
      parameters:
      - description: Тело
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/models.SubScription'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: создать новую подписку
      tags:
      - Subscription
  /subscription/user/{user_id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: ID it's user
        in: path
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.SubScription'
            type: array
      summary: получить лист подписок по юзеру
      tags:
      - Subscription
  /user/email/{email}:
    get:
      consumes:
      - application/json
      parameters:
      - description: user's email
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      summary: Получить пользователя по почте
      tags:
      - User
  /user/id/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: user's id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      summary: Получить пользователя по айди
      tags:
      - User
  /user/new:
    post:
      consumes:
      - application/json
      parameters:
      - description: Тело
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      summary: создать нового пользователя
      tags:
      - User
swagger: "2.0"
